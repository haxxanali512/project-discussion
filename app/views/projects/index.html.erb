
  <div class="app-container">
    <%= render "layouts/sidebar"%>

    <!-- Main Content -->
    <main class="main-content">
      <header class="main-header">
        <div class="header-content">
          <h1>Projects</h1>
          <button class="btn-primary" id="new-project-btn">
            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-plus"><line x1="12" x2="12" y1="5" y2="19"/><line x1="5" x2="19" y1="12" y2="12"/></svg>
            New Project
          </button>
        </div>
      </header>

      <!-- Project Creation Modal -->
      <div class="modal" id="project-modal">
        <div class="modal-content">
          <div class="modal-header">
            <h2>Create New Project</h2>
            <button class="close-modal">Ã—</button>
          </div>
          <form id="project-form">
            <div class="form-group">
              <label for="project-name">Project Name</label>
              <input type="text" id="project-name" name="project-name" required>
            </div>
            <div class="form-group">
              <label for="project-description">Description</label>
              <textarea id="project-description" name="project-description" required></textarea>
            </div>
            <div class="form-row">
              <div class="form-group">
                <label for="start-date">Start Date</label>
                <input type="date" id="start-date" name="start-date" required>
              </div>
              <div class="form-group">
                <label for="due-date">Due Date</label>
                <input type="date" id="due-date" name="due-date" required>
              </div>
            </div>
            <div class="form-group">
              <label for="project-status">Status</label>
              <select id="project-status" name="project-status" required>
                <option value="not-started">Not Started</option>
                <option value="in-progress">In Progress</option>
                <option value="under-review">Under Review</option>
                <option value="completed">Completed</option>
              </select>
            </div>
            <div class="form-actions">
              <button type="button" class="btn-secondary" id="cancel-project">Cancel</button>
              <button type="submit" class="btn-primary">Create Project</button>
            </div>
          </form>
        </div>
      </div>

      <!-- Projects Table -->
      <div class="projects-table-container">
        <table class="projects-table">
          <thead>
            <tr>
              <th>Project Name</th>
              <th>Status</th>
              <th>Start Date</th>
              <th>Due Date</th>
            </tr>
          </thead>
          <tbody id="projects-tbody">
             <% @projects.each do |project| %>
                <tr>
                    <td><%= project.title %></td>
                    <td><%= project.description %></td>
                    <td><%= project.due_date&.strftime('%b %d, %Y') %></td>
                    <td><%= project.status.humanize %></td>
                    <td>
                    </td>
                </tr>
                <% end %>
          </tbody>
        </table>
      </div>
    </main>
  </div>

  <script>
 document.addEventListener('DOMContentLoaded', function () {
  // DOM Elements
  const newProjectBtn = document.getElementById('new-project-btn');
  const projectModal = document.getElementById('project-modal');
  const projectForm = document.getElementById('project-form');
  const closeModalBtn = document.querySelector('.close-modal');
  const cancelProjectBtn = document.getElementById('cancel-project');
  const projectsTbody = document.getElementById('projects-tbody');

  // Event Listeners
  newProjectBtn.addEventListener('click', openModal);
  closeModalBtn.addEventListener('click', closeModal);
  cancelProjectBtn.addEventListener('click', closeModal);
  projectForm.addEventListener('submit', handleProjectSubmit);

  // Load existing projects
  loadProjects();

  // Functions
  function openModal() {
    projectModal.classList.add('active');
    document.body.style.overflow = 'hidden';
  }

  function closeModal() {
    projectModal.classList.remove('active');
    document.body.style.overflow = '';
    projectForm.reset();
  }

  function handleProjectSubmit(e) {
    e.preventDefault();

    const project = {
      title: document.getElementById('project-name').value,
      description: document.getElementById('project-description').value,
      start_date: document.getElementById('start-date').value,
      due_date: document.getElementById('due-date').value,
      status: document.getElementById('project-status').value,
    };

    // Send the project to the backend
    fetch('/projects', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        'X-CSRF-Token': document.querySelector('meta[name="csrf-token"]').content,
      },
      body: JSON.stringify({ project }),
    })
      .then((response) => {
        if (response.ok) {
          return response.json(); // Parse the JSON response
        } else {
          throw new Error('Failed to create project');
        }
      })
      .then((newProject) => {
        addProjectToTable(newProject); // Add the new project to the table
        closeModal(); // Close the modal
      })
      .catch((error) => {
        console.error(error);
        alert('Failed to create project');
      });
  }

  function loadProjects() {
    fetch('/projects.json')
      .then((response) => response.json())
      .then((projects) => {
        projectsTbody.innerHTML = '';
        projects.forEach((project) => addProjectToTable(project));
      })
      .catch((error) => console.error('Error loading projects:', error));
  }

  function addProjectToTable(project) {
    const row = document.createElement('tr');

    row.innerHTML = `
      <td>
        <a href="/projects/${project.id}" class="project-name">${project.title}</a>
      </td>
      <td>
        <span class="status-badge ${project.status}">${formatStatus(project.status)}</span>
      </td>
      <td>${formatDate(project.start_date)}</td>
      <td>${formatDate(project.due_date)}</td>
      <td>
        <div class="project-actions">
          <button class="btn btn-danger delete-project" data-id="${project.id}">Delete</button>
        </div>
      </td>
    `;

    projectsTbody.prepend(row);

    // Add event listener for delete button
    row.querySelector('.delete-project').addEventListener('click', function () {
      deleteProject(project.id, row);
    });
  }

  function deleteProject(projectId, row) {
    fetch(`/projects/${projectId}`, {
      method: 'DELETE',
      headers: {
        'X-CSRF-Token': document.querySelector('meta[name="csrf-token"]').content,
      },
    })
      .then((response) => {
        if (response.ok) {
          row.remove();
        } else {
          throw new Error('Failed to delete project');
        }
      })
      .catch((error) => {
        console.error(error);
        alert('Failed to delete project');
      });
  }

  function formatStatus(status) {
    return status
      .split('-')
      .map((word) => word.charAt(0).toUpperCase() + word.slice(1))
      .join(' ');
  }

  function formatDate(dateString) {
    const options = { month: 'short', day: 'numeric', year: 'numeric' };
    return new Date(dateString).toLocaleDateString('en-US', options);
  }
});
  </script>