
  <div class="app-container">
    <%= render "layouts/sidebar"%>
    <!-- Main Content -->
    <main class="main-content">
      <header class="main-header">
        <div class="current-project">
          <h1>Website Redesign Project</h1>
          <div class="project-actions">
        <select id="project-selector">
          <option value="">Select a project</option>
          <% @projects.each do |project| %>
            <option value="<%= project.id %>" <%= 'selected' if project == @current_project %>>
              <%= project.title %>
            </option>
          <% end %>
        </select>
          <div class="status-selector">
            <label for="project-status">Status:</label>
            <select id="project-status" class="status-<%= @current_project&.status || 'not-started' %>">
              <option value="not-started" <%= 'selected' if @current_project&.status == 'not-started' || @current_project.nil? %>>Not Started</option>
              <option value="in-progress" <%= 'selected' if @current_project&.status == 'in-progress' %>>In Progress</option>
              <option value="under-review" <%= 'selected' if @current_project&.status == 'under-review' %>>Under Review</option>
              <option value="completed" <%= 'selected' if @current_project&.status == 'completed' %>>Completed</option>
            </select>
          </div>   </div>   <div class="project-meta">
                <div class="meta-item">
                <span class="meta-label">Due Date:</span>
                <span class="meta-value"><%= @current_project&.due_date&.strftime('%b %d, %Y') || 'Not Set' %></span>
                </div>   </div>
      </header>

      <section class="project-conversation">
        <div class="section-header">
          <h2>Project Conversation</h2>
        </div>
     <%= render partial: 'dashboard/conversation_timeline', locals: { activities: @activities } %>
        <div class="comment-form">
          <div class="user-avatar">
            <img src="https://xsgames.co/randomusers/assets/images/favicon.png" alt="Your Profile">
          </div>
          <div class="comment-input-container">
            <%= form_with url: activities_path, method: :post, local: true do |form| %>
              <%= form.text_area :description, id: "comment-input", placeholder: "Add a comment...", name: "activity[body]" %>
              <%= form.hidden_field :name, value: "comment", name: "activity[activity_type]" %>
              <%# <%= form.hidden_field :status, value: "active", name: "activity[status]" %> 
              <div class="comment-actions">
                <div class="format-actions">
                  <button class="format-btn" title="Bold" type="button">
                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-bold"><path d="M14 12a4 4 0 0 0 0-8H6v8"/><path d="M15 20a4 4 0 0 0 0-8H6v8Z"/></svg>
                  </button>
                  <button class="format-btn" title="Italic" type="button">
                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-italic"><line x1="19" x2="10" y1="4" y2="4"/><line x1="14" x2="5" y1="20" y2="20"/><line x1="15" x2="9" y1="4" y2="20"/></svg>
                  </button>
                  <button class="format-btn" title="Add List" type="button">
                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-list"><line x1="8" x2="21" y1="6" y2="6"/><line x1="8" x2="21" y1="12" y2="12"/><line x1="8" x2="21" y1="18" y2="18"/><line x1="3" x2="3.01" y1="6" y2="6"/><line x1="3" x2="3.01" y1="12" y2="12"/><line x1="3" x2="3.01" y1="18" y2="18"/></svg>
                  </button>
                  <button class="format-btn" title="Add Image" type="button">
                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-image"><rect width="18" height="18" x="3" y="3" rx="2" ry="2"/><circle cx="9" cy="9" r="2"/><path d="m21 15-3.086-3.086a2 2 0 0 0-2.828 0L6 21"/></svg>
                  </button>
                </div>
                <%= form.submit "Send", class: "btn-primary", id: "submit-comment" %>
              </div>
            <% end %>
          </div>   </div>   </section>
    </main>
  </div>

  <script>
document.addEventListener('DOMContentLoaded', () => {
  const projectSelector = document.getElementById('project-selector');
  const statusSelector = document.getElementById('project-status');
  const chatContainer = document.querySelector('.conversation-timeline');

  const refreshChatContainer = () => {
    fetch('/dashboard', {
      headers: {
        'X-Requested-With': 'XMLHttpRequest',
      },
    })
      .then((response) => response.text())
      .then((html) => {
        const parser = new DOMParser();
        const doc = parser.parseFromString(html, 'text/html');
        const newChatContainer = doc.querySelector('.conversation-timeline');
        if (newChatContainer && chatContainer) {
          chatContainer.innerHTML = newChatContainer.innerHTML;
        }
      })
      .catch((error) => console.error('Error refreshing chat container:', error));
  };

  if (projectSelector) {
    projectSelector.addEventListener('change', (event) => {
      const projectId = event.target.value;

      fetch('/set_project', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          'X-CSRF-Token': document.querySelector('meta[name="csrf-token"]').content,
        },
        body: JSON.stringify({ project_id: projectId }),
      }).then((response) => {
        if (response.ok) {
          refreshChatContainer(); // Refresh chat container after project change
        } else {
          alert('Failed to set project');
        }
      });
    });
  }

  if (statusSelector) {
    statusSelector.addEventListener('change', (event) => {
      const status = event.target.value;

      fetch('/update_status', {
        method: 'PATCH',
        headers: {
          'Content-Type': 'application/json',
          'X-CSRF-Token': document.querySelector('meta[name="csrf-token"]').content,
        },
        body: JSON.stringify({ status: status }),
      }).then((response) => {
        if (response.ok) {
          refreshChatContainer(); // Refresh chat container after status change
        } else {
          alert('Failed to update status');
        }
      });
    });
  }
});
  </script>